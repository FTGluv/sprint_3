openapi: 3.0.3

info:
  title: User API 1.0
  description:
    User API
  version: '1.0'
paths:
  /user:
    put:
      requestBody:
        description: Update existing user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_login:
                  type: string
                user_email:
                  type: string
                user_tel_number:
                  type: string   
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'       
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /user/find:
    get:
      parameters:
        - name: user_login
          in: query
          required: false
          schema:
            type: string
        - name: user_email
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'          
        '400':
          description: Invalid search parameters
  /user/{user_id}:
    get:
      description: Get info about a particular User
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'         
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
    delete:
      description: Delete user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation       
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
        user_login:
          type: string
        user_email:
          type: string
        user_tel_number:
          type: string